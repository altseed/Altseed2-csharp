name: Altseed

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update Submodules
      run: |
        git submodule update --init --recursive
    - name: Cache Core
      uses: actions/cache@v1
      id: cache-core
      env:
        cache-name: cache-core
      with:
        path: Core/build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Core/core/**') }}
    - name: Build CMake
      if: steps.cache-core.outputs.cache-hit != 'true'
      run: |
        cd Core
        mkdir build
        cd build
        cmake .. -A x64 -D USE_MSVC_RUNTIME_LIBRARY_DLL=OFF
        cmake --build . --config Release
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.103
    - name: Build
      run: dotnet build Altseed2.sln --configuration CI
    - name: Upload artifact
      continue-on-error: true
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test-windows
        path: Build
  
  test:
    runs-on: windows-latest
    needs: [windows]
    steps:
      - uses: actions/checkout@v2
      - name: Update Submodules
        run: |
          git submodule update --init
          
      - name: Download Windows
        uses: actions/download-artifact@v1
        with:
          name: test-windows
      - name: Test
        run: |
          cd test-windows/CI/net5.0
          ./TestForMacLinux.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: test-result
          path: test-windows/CI/net5.0

      - name: Compare tests
        run: |
          cd Scripts
          python test_screenshot.py

  linux:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Update Submodules
      run: |
        git submodule update --init --recursive
    - name: Cache Core
      uses: actions/cache@v1
      id: cache-core
      env:
        cache-name: cache-core
      with:
        path: Core/build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Core/core/**') }}
    - name: Build CMake
      if: steps.cache-core.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/harfbuzz/harfbuzz/releases/download/2.7.1/harfbuzz-2.7.1.tar.xz
        tar Jxfv harfbuzz-2.7.1.tar.xz
        cd harfbuzz-2.7.1
        sudo ./configure --prefix=/usr --with-gobject --with-graphite2 &&
        sudo make
        sudo make install
        cd ..
        wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.1.121-bionic.list http://packages.lunarg.com/vulkan/1.1.121/lunarg-vulkan-1.1.121-bionic.list
        sudo apt update
        sudo apt install vulkan-sdk
        sudo apt -y install libx11-dev libxrandr-dev libxi-dev libxinerama-dev libxcursor-dev libudev-dev
        sudo apt -y install libssl-dev
        sudo apt -y install libglu1-mesa-dev mesa-common-dev
        sudo apt -y install libpulse-dev
        sudo apt -y install libgtk-3-dev
        cd Core
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.103
    - name: Build
      run: dotnet build Altseed2.sln --configuration CI
    - name: Test
      continue-on-error: true
      run: |
        cd Build/CI/net5.0
        mv libAltseed2_Core.so libAltseed2_Core
        dotnet TestForMacLinux.dll
    - name: Upload artifact
      continue-on-error: true
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test-linux
        path: Build
        
  macOS:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Update Submodules
      run: |
        git submodule update --init --recursive
    - name: Cache Core
      uses: actions/cache@v1
      id: cache-core
      env:
        cache-name: cache-core
      with:
        path: Core/build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Core/core/**') }}
    - name: Setup CMake
      if: steps.cache-core.outputs.cache-hit != 'true'
      uses: jwlawson/actions-setup-cmake@v1.4
      with:
        cmake-version: '3.18.x'
    - name: Build CMake
      if: steps.cache-core.outputs.cache-hit != 'true'
      run: |
        cmake --version
        cd Core
        mkdir build
        cd build
        cmake .. -G "Xcode" 
        cmake --build . --config Release
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.103
    - name: Build
      run: dotnet build Altseed2.sln --configuration CI
    - name: Test
      continue-on-error: true
      run: |
        cd Build/CI/net5.0
        dotnet TestForMacLinux.dll
    - name: Upload artifact
      continue-on-error: true
      uses: actions/upload-artifact@v1.0.0
      with:
        name: test-mac
        path: Build

  merge:
    runs-on: ubuntu-18.04
    needs: [windows, linux, macOS]
    steps:
      - uses: actions/checkout@v2
      - name: Update Submodules
        run: |
          git submodule update --init
          
      - name: Download Windows
        uses: actions/download-artifact@v1
        with:
          name: test-windows

      - name: Download macOS
        uses: actions/download-artifact@v1
        with:
          name: test-mac

      - name: Download Linux
        uses: actions/download-artifact@v1
        with:
          name: test-linux

      - name: Merge
        run: |
          mkdir Altseed2
          mkdir Altseed2/netstandard2.1
          mkdir Altseed2/net5.0
          
          cp Core/LICENSE Altseed2/
          cp test-windows/Release/Altseed2.xml Altseed2/.
          cp test-windows/Release/netstandard2.1/Altseed2.dll Altseed2/netstandard2.1/.
          cp test-windows/Release/net5.0/Altseed2.dll Altseed2/net5.0/.
          
          cp test-windows/Release/net5.0/Altseed2_Core.dll Altseed2/.
          cp test-mac/Release/net5.0/libAltseed2_Core.dylib Altseed2/.
          cp test-linux/Release/net5.0/libAltseed2_Core Altseed2/.
        
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: Altseed2-${{ github.sha }}
          path: Altseed2
  make_nuget:
    runs-on: windows-latest
    needs: [merge]
    steps:
      - uses: actions/checkout@v2
      - name: Download Altseed2
        uses: actions/download-artifact@v1
        with:
          name: Altseed2-${{ github.sha }}
      
      - name: Make Nuget Package
        run: |
          wget https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -O nuget.exe
          mkdir package/
          mkdir package/licenses
          mkdir result/
          mv Nuget/* package/.
          mv Altseed2-${{ github.sha }}/* package/.
          cd package
          mv LICENSE licenses/LICENSE.txt
          ..\nuget.exe pack Altseed2.nuspec -OutputDirectory ../result
        shell: powershell
        
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: nuget
          path: result
